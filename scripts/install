#!/bin/bash

#=================================================
# GENERIC STARTING
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# MANAGE FAILURE OF THE SCRIPT
#=================================================

# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

domain=$YNH_APP_ARG_DOMAIN
old_domain=$YNH_APP_ARG_OLD_DOMAIN
wp_backup=$YNH_APP_ARG_WP_BACKUP
path_url=$YNH_APP_ARG_PATH
admin_wordpress=$YNH_APP_ARG_ADMIN
language=$YNH_APP_ARG_LANGUAGE
multisite=$YNH_APP_ARG_MULTISITE
is_public=$YNH_APP_ARG_IS_PUBLIC

app=$YNH_APP_INSTANCE_NAME

#=================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THIS ARGS
#=================================================
ynh_script_progression --message="Validating installation parameters..." --weight=2

final_path=/var/www/$app
test ! -e "$final_path" || ynh_die --message="This path already contains a folder"

# Register (book) web path
ynh_webpath_register --app="$app" --domain="$domain" --path_url="$path_url"

if [ "$path_url" == "/" ] && [ "$multisite" -eq 1 ]; then
	ynh_die --message="Multisite option of wordpress doesn't work at the root of a domain."
fi

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================
ynh_script_progression --message="Storing installation settings..." --weight=2

ynh_app_setting_set --app="$app" --key=domain --value="$domain"
ynh_app_setting_set --app="$app" --key=path --value="$path_url"
ynh_app_setting_set --app="$app" --key=admin --value="$admin_wordpress"
ynh_app_setting_set --app="$app" --key=is_public --value="$is_public"
ynh_app_setting_set --app="$app" --key=language --value="$language"
ynh_app_setting_set --app="$app" --key=multisite --value="$multisite"

#=================================================
# STANDARD MODIFICATIONS
#=================================================
# INSTALL DEPENDENCIES
#=================================================
ynh_script_progression --message="Installing dependencies..." --weight=9

ynh_install_app_dependencies git

#=================================================
# CREATE A MYSQL DATABASE
#=================================================
ynh_script_progression --message="Creating a MySQL database..."

db_name=$(ynh_sanitize_dbid --db_name="$app")
ynh_app_setting_set --app="$app" --key=db_name --value="$db_name"
ynh_mysql_setup_db --db_user="$db_name" --db_name="$db_name"

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression --message="Setting up source files..." --weight=4

mkdir -p /tmp/git
pushd /tmp/git || exit
git clone "$wp_backup"
cd * || exit
mv * "$final_path"
popd || exit
pushd "$final_path" || exit
git config credential.helper store
popd || exit
rm -r /tmp/git

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Configuring nginx web server..." --weight=3

# Create a dedicated nginx config
ynh_add_nginx_config

#=================================================
# CREATE DEDICATED USER
#=================================================
ynh_script_progression --message="Configuring system user..." --weight=3

# Create a dedicated system user
ynh_system_user_create --username="$app"

#=================================================
# PHP-FPM CONFIGURATION
#=================================================
ynh_script_progression --message="Configuring php-fpm..." --weight=2

# Create a dedicated php-fpm config
ynh_add_fpm_config

#=================================================
# SPECIFIC SETUP
#=================================================
# CONFIGURE WP-CONFIG
#=================================================
ynh_script_progression --message="Configuring wordpress..."

cp ../conf/wp-config.php "$final_path"/wp-config.php
# Change variables in Wordpress configuration
ynh_replace_string --match_string="__DB_USER__" --replace_string="$db_name" --target_file="$final_path"/wp-config.php
ynh_replace_string --match_string="__DB_PWD__" --replace_string="$db_pwd" --target_file="$final_path"/wp-config.php

for i in 1 2 3 4 5 6 7 8
do
	j=$(ynh_string_random --length=40)
	ynh_replace_string --match_string="KEY$i" --replace_string="$j" --target_file="$final_path"/wp-config.php
	sleep 0.5
done

#=================================================
# CONFIGURE MULTISITE
#=================================================

if [ "$multisite" -eq 1 ]
then
	ynh_script_progression --message="Configuring multisite..." --weight=2

	ynh_replace_string --match_string="#--MULTISITE--" --replace_string="" --target_file=/etc/nginx/conf.d/"$domain".d/"$app".conf
	# Allow multisite
	ynh_replace_string --match_string="//--MULTISITE1--define" --replace_string="define " --target_file="$final_path"/wp-config.php

	# Activate multisite via wp-cli
	ynh_exec_fully_quiet "$wpcli_alias" core multisite-convert --base="$path_url"/

	# Activate multisite in wordpress config
	ynh_replace_string --match_string="//--MULTISITE2--define" --replace_string="define" --target_file="$final_path"/wp-config.php

	ynh_mysql_connect_as --user="$db_name" --password="$db_pwd" --database="$db_name" < ../conf/sql/multisite.sql
	plugin_network="--network"
else
	ynh_mysql_connect_as --user="$db_name" --password="$db_pwd" --database="$db_name" < ../conf/sql/single.sql
	plugin_network=""
fi


#=================================================
# IMPORT WORDPRESS DB
#=================================================

if [ -e "$final_path/bdd.sql" ]; then
ynh_print_info --message="Check SQL..."
sed sed -i "s@"$old_domain"@"$domain"@g" "$final_path/bdd.sql"
# That help for debug
cat "$final_path/bdd.sql" | grep "$old_domain"
ynh_print_info --message="Import SQL..."
ynh_mysql_execute_file_as_root --file="$final_path/bdd.sql" --database="$db_name"
ynh_print_info --message="Remove SQL..."
ynh_secure_remove "$final_path/*.sql"
fi

#=================================================
# STORE THE CONFIG FILE CHECKSUM
#=================================================

# Calculate and store the config file checksum into the app settings
ynh_store_file_checksum --file="$final_path/wp-config.php"

#=================================================
# CREATE A CRON TASK FOR AUTOMATIC UPDATE
#=================================================

echo "# Reach everyday wp-cron.php?doing_wp_cron to trig the internal wordpress cron.
0 3  *  *  * root wget -q -O - https://$domain$path_url/wp-cron.php?doing_wp_cron >/dev/null 2>&1" > /etc/cron.d/"$app"

#=================================================
# GENERIC FINALISATION
#=================================================
# SECURING FILES AND DIRECTORIES
#=================================================

# Set permissions to app files
# Files have to be own by the user of wordpress. To allow upgrade from the app.
find "$final_path"/* -type d -exec chmod 755 $(basename '{}') \;
find "$final_path"/* -type f -exec chmod 644 $(basename '{}') \;
chmod 0644 .htaccess
chmod 0640 wp-config.php
chown -R "$app": "$final_path"
# Except the file config wp-config.php
#chown root: "$final_path"/wp-config.php

#=================================================
# SETUP FAIL2BAN
#=================================================

ynh_script_progression --message="Configuring fail2ban..." --weight=7

# Create a dedicated fail2ban config
ynh_add_fail2ban_config --logpath="/var/log/auth.log" --failregex="Authentication (attempt for unknown user|failure for) .* from <HOST>" --max_retry=5

#=================================================
# SETUP SSOWAT
#=================================================

ynh_script_progression --message="Configuring SSOwat..."

if [ "$is_public" -eq 0 ];
then
	# Remove the public access
	ynh_app_setting_delete --app="$app" --key=unprotected_uris
fi

#=================================================
# RELOAD NGINX
#=================================================

ynh_script_progression --message="Reloading nginx web server..." --weight=3

ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# SEND A README FOR THE ADMIN
#=================================================

echo "If you're facing an issue or want to improve this app, please open a new issue in this project: https://github.com/YunoHost-Apps/wordpress_ynh" > mail_to_send

ynh_send_readme_to_admin --app_message="mail_to_send" --recipients="$admin_wordpress" --type=install

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Installation of $app completed" --last
